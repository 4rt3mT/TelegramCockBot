import telebot;
from random import randint,choice

from telebot import types
import sqlite3 
import csv
from time import sleep
import pymorphy2
from datetime import date, datetime, timedelta


bot = telebot.TeleBot('6054495160:AAF3k0Ye_u2P9iy3XtEwakl9Rhis-1buIFE')

con = sqlite3.connect("main.db",check_same_thread=False)
cur = con.cursor()
morph = pymorphy2.MorphAnalyzer()


def Inflect(word):
    return morph.parse(word)[0].inflect({'gent'}).word

def WomanOrMen(word):
    p = morph.parse(word)[0]

    lastChar = word[-1]
    if p.tag.gender == "femn":
        Sex = '–¢–≤–æ—è'
    elif p.tag.gender == "masc":
        Sex = '–¢–≤–æ–π'
    else:
        Sex = '–¢–≤–æ—ë'

    return Sex





ArrayOfDickNames = [
    "–ê–Ω–∞–∫–æ–Ω–¥–∞", 
    "–ë–∞–Ω–∞–Ω", 
    "–°—Ç–æ—è–∫", 
    "–°–æ—Å–∏—Å–∫–∞", 
    "–í—ã–ø—É–∫–ª–æ—Å—Ç—å", 
    "–î–∏–∫–∫–µ–Ω—Å", 
    "–î–∏–Ω—å-–¥–æ–Ω", 
    "–ü–∞–ª–æ—á–∫–∞", 
    "–≠–∫—Å–∫–∞–ª–∏–±—É—Ä",  
    "–§–∞—Å–æ–ª—å", 
    "–ö–æ—Ä–Ω–∏—à–æ–Ω", 
    "–ì–æ–ª–¥—Ñ–∏–Ω–≥–µ—Ä", 
    "–®–ª–∞–Ω–≥", 
    "–ú–æ–ª–æ—Ç–æ–∫", 
    "–î–∂–∏–º–º–∏", 
    "–î–∂–æ–Ω—Å–æ–Ω", 
    "–î–∂–æ–Ω—Å–æ–Ω", 
    "–î–∂–æ–π—Å—Ç–∏–∫", 
    "–ú–ª–∞–¥—à–∏–π", 
    "–ú—É—Å–æ—Ä", 
    "–†—É—á–∫–∞", 
    "–•–æ–±–≥–æ–±–ª–∏–Ω", 
    "–õ–µ—Ä–æ–π", 
    "–ü–∞—Ä–µ–Ω—å", 
    "–°—Ç–æ—è–∫", 
    "–ú–æ–ª–æ—Ç–æ–∫", 
    "–ì–µ—Ä–∫—É–ª–µ—Å", 
    "–î–∂–æ–π—Å—Ç–∏–∫", 
    "–ü–∞–ª–∫–∞", 
    "–£—á–∞—Å—Ç–Ω–∏–∫", 
    "–î–∏–∫", 
    "–í–µ–∑—É–≤–∏–π", 
    "–ü–∏—Ç", 
    "–ú–æ–Ω—Å—Ç—Ä", 
    "–ó–º–µ—è", 
    "–£–ø–∞–∫–æ–≤–∫–∞", 
    "–ü–µ–ø–ø–µ—Ä–æ–Ω–∏", 
    "–û–≥—É—Ä–µ—Ü", 
    "–ü–æ—Ä—à–µ–Ω—å", 
    "–ó–∞–ª—É–ø–∞", 
    "–†–∞–∫–µ—Ç–∞", 
    "–≠—Å–∫–∏–º–æ",  
    "–ü–∏—Ç–æ–Ω", 
    "–°—Ç–µ—Ä–∂–µ–Ω—å", 
    "–°–∞–ª—è–º–∏", 
    "–ö–æ–ª–±–∞—Å–∞", 
    "–®–ª–∞–Ω–≥", 
    "–í–∞–ª", 
    "–ó–º–µ—è", 
    "–°—Ç–∏—Ñ—Ñ–∏", 
    "–ù–æ–≥–∞", 
    "–¢–æ—Ä", 
    "–°—Ç–≤–æ–ª", 
    "–¢—É–Ω–µ—Ü"
]



def getDickLenght(Value):
    if Value <= 0:
        dick = "<3"
        return dick
    elif Value <=10:
        dick = "<=3"
        return dick
    charCount = int(Value / 10)
    dick = "<" + "=" * charCount + "3"
    return dick

@bot.message_handler(commands=['start'])
def start_message(message):
    
    res = cur.execute("SELECT id FROM users WHERE id={0}".format(message.from_user.id))
    if res.fetchone() is not None:
        DickName = Inflect(choice(ArrayOfDickNames).lower())
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ –≤—ã—Ä–∞—Å—Ç–∏—Ç—å {1}.".format(message.from_user,DickName))
    else:
        markup = types.ReplyKeyboardMarkup()
        #button1 = types.KeyboardButton("/dick")
        #markup.add(button1)
        Value = randint(1,15)
        dickString = getDickLenght(Value)
        

        cur.execute("""
            INSERT INTO users VALUES
                ({0}, {1},"{2}","","",NULL)
        """.format(message.from_user.id,Value,message.from_user.first_name))
        con.commit()
        DickName = choice(ArrayOfDickNames).lower()
        DickFullName = "–¢–≤–æ–π" +" "+ DickName    
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! {2} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {1}—Å–º".format(message.from_user,str(Value),DickFullName), reply_markup=markup)
        bot.send_message(message.chat.id, "–ß–ª–µ–Ω {0.first_name} –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: \n  {1}".format(message.from_user,dickString))

@bot.message_handler(commands=['topdicks'])
def start_message(message):
    res = cur.execute("SELECT id,value,name FROM users ORDER BY value DESC".format(message.from_user.id))
    result = res.fetchall()
    if result is not None:
        stringOfDicks = ""
        first = True
        for Dick in result:
            
            if Dick[2] is None:
                Name = Dick[0]
            else:
                Name = Dick[2]
            if first:
                crown = "üëë"
                first = False
            else:
                crown = ""
            stringOfDicks = stringOfDicks + crown  +str(Name) +crown + " - " + str(Dick[1]) + " —Å–º \n"
        
        bot.send_message(message.chat.id, stringOfDicks)
    

@bot.message_handler(commands=['dick'])
def pistrun(message):

    res = cur.execute("SELECT id,value,lastgrow FROM users WHERE id={0}".format(message.from_user.id))
    result = res.fetchone()
    
    if result is not None:
        AllowGrow = True
        if result[2] is not None:
            LastGrow = datetime.strptime(result[2],"%Y-%m-%d")
            Today = date.today()
            Delta = datetime(Today.year, Today.month, Today.day) - LastGrow
            if Delta != 0:
                AllowGrow = False
        if AllowGrow == False:
            DickName = choice(ArrayOfDickNames).lower()
            DickFullName = WomanOrMen(DickName) +" "+ DickName
            bot.send_message(message.chat.id, "{0} –æ—Ç–¥—ã—Ö–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞".format(DickFullName))
        else:        
            print(result[0])
            actualLength = int(result[1])
            Value = randint(-5,10)
            actualLength = actualLength + Value
            dickString = getDickLenght(actualLength)
            query1 = '''
                UPDATE users
                SET value = {0}, name = "{2}", lastgrow="{3}"
                WHERE id = {1};
                '''.format(actualLength,result[0],message.from_user.first_name,date.today())
            cur.execute(query1)
            con.commit()
            DickName = choice(ArrayOfDickNames).lower()
            DickFullName = WomanOrMen(DickName) +" "+ DickName
            bot.send_message(message.chat.id, "{2} —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ {0}—Å–º ! –¢–µ–ø–µ—Ä—å –µ–≥–æ –¥–ª–∏–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {1}—Å–º".format(str(Value),str(actualLength),DickFullName))
            bot.send_message(message.chat.id, "–ß–ª–µ–Ω {0.first_name} –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: \n  {1}".format(message.from_user,dickString))

            
    else:
        DickName = choice(ArrayOfDickNames).lower()
        DickFullName = WomanOrMen(DickName) +" "+ DickName
        bot.send_message(message.chat.id, "–Ø {0} –µ—â–µ –Ω–µ –∑–Ω–∞—é, —â–∞—Å –∑–∞–ø–∏—à—É...".format(DickFullName.lower()))
        markup = types.ReplyKeyboardMarkup()
        #button1 = types.KeyboardButton("/—É–≤–µ–ª–∏—á–∏—Ç—å–ø–∏—Å—Ç—Ä—É–Ω")
        #markup.add(button1)
        Value = randint(1,15)
        dickString = getDickLenght(Value)
        
        cur.execute("""
            INSERT INTO users VALUES
                ({0}, {1}, "{2}","","",NULL)
        """.format(message.from_user.id,Value,message.from_user.first_name))
        con.commit()
            
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}! {2} —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: {1}—Å–º".format(message.from_user,str(Value),DickFullName), reply_markup=markup)
        bot.send_message(message.chat.id, "–ß–ª–µ–Ω {0.first_name} –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: \n  {1}".format(message.from_user,dickString))



						
while True:
    try:
        bot.polling(none_stop=True)
    except Exception as _ex:
        print(_ex)
        sleep(3)


